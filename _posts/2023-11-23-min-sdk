---
layout: post
title:  "Welcome to Jekyll!"
date:   2023-04-30 00:34:49 +0200
categories: jekyll update
---

# What can you change when increasing your minSdkVersion? *

## Introduction *

Increasing your minSdkVersion has many benefits blah blah *
It's a tradeoff, you lose some % of users *
Show the market breakdown graphic. Maybe show it by region too - highlight that it's different by region.

## Cleaning up your codebase

- Search your codebase for usages of `SDK_INT` (i.e., usages of `Build.VERSION.SDK_INT`), to check for spots where your code branches dependeding on sdk version. You may find many back-compatibility fixes which can be removed.
- Each section in the list below lists the cleanups which are enabled by the respective minSdkVersion

## 14 (Ice Cream Sandwich)

- [`VectorDrawableCompat`][vector-back-compat] is supported from sdk 14 and up - you can replace your png files with vector assets.

## 19 (4.4 - 4.4.4 / KitKat)

- Make use of the latest AndroidX library versions [from October 2023 onwards][androidx]

## 21 (5.0 / Lollipop)

- TLS 1.2 is supported. In case you added a [workaround][tls-workaround] to support TLS on older android versions, it can be removed.
- You can use Jetpack Compose in your project

## 23 (6.0 / Marshmallow)

- test

## 24 (7.0 / Nougat)

- Full support for vector drawable features, without using backwards compatibility:
    - You can remove `vectorDrawables.useSupportLibrary = true` from your build.gradle
    - You can switch usages of `app:srcCompat` to `android:src`
- Support for resource references inside vector drawables (e.g. setting `fillColor="?attr/colorOnPrimary")

## 25 (7.1 / Nougat)

- todo

<!-- bibliography -->
[androidx]: https://android-developers.googleblog.com/2023/10/androidx-minsdkversion-19.html
<!-- this is pretty extensive, but I want to show how code can be cleaned up too -->
[kaushikgopal]: https://github.com/kaushikgopal/why_bump_android_minsdk

[vector-back-compat]: https://developer.android.com/develop/ui/views/graphics/vector-drawable-resources#vector-drawables-backward-solution

[tls-workaround]: [https://stackoverflow.com/questions/28943660/how-to-enable-tls-1-2-support-in-an-android-application-running-on-android-4-1]